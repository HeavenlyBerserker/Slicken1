/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*-----------------------------------
 Imports
 ------------------------------------*/
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.*;
import javax.swing.table.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.Arrays;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;




import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author Hong
 */
public class Jtable2 extends javax.swing.JFrame {
     DecimalFormat df = new DecimalFormat("#.####");
     private JFileChooser fc;
     private JFileChooser fd;
     private JTextArea log;
    /**
     * Creates new form Jtable
     */
    public Jtable2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablec1 = new javax.swing.JTable();
        Load = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        field = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        tablec1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablec1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablec1);
        if (tablec1.getColumnModel().getColumnCount() > 0) {
            tablec1.getColumnModel().getColumn(13).setPreferredWidth(180);
            tablec1.getColumnModel().getColumn(14).setPreferredWidth(180);
        }

        Load.setText("Load");
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Slicken Lines Table Window ");

        field.setText("Document1.slc2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(field))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(Load)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Save)
                        .addGap(262, 262, 262))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1)
                        .addContainerGap(321, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Load)
                    .addComponent(Save))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        Save.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /*-----------------------------------
     Function SaveActionPerformed
     Saves the table to a text file extension .slc2.
     ------------------------------------*/
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        //Selecting the table and getting the values
        DefaultTableModel model = (DefaultTableModel) tablec1.getModel();
        int i = model.getRowCount();
        int j = model.getColumnCount();
        String nam = "";
        if (fc == null) {
            fc = new JFileChooser();
        }
        int returnVal = fc.showDialog(Jtable2.this,
                                      "Save");
                                      
        
        //Select the file in which to write
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            nam = file.getPath();
        } 
        String prove = nam.substring(nam.length() - 5);
        field.setText(nam + ".slc2");
        if(prove.equals(".slc2")){
            field.setText(nam);
        }
        //Write to file
        try{
            File file;
            if(prove.equals(".slc2")){
                file = new File(nam);
            }
            else{
                file = new File(nam + ".slc2");
            }

            if (!file.exists()) {
                    file.createNewFile();
            }
            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            try (BufferedWriter bw = new BufferedWriter(fw)) {
                for(int n = 0; n < i; n++){
                    for(int l = 0; l < j; l++){
                        bw.write(String.valueOf(model.getValueAt(n, l)) + ";");
                    }
                    bw.newLine();
                }
            }
        } catch (IOException e) {
        
        }
       
    }//GEN-LAST:event_SaveActionPerformed
    /*-----------------------------------
     Function LoadActionPerformed
     Loads a .slc2 file and copies its values to the table
     ------------------------------------*/
    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        //Selecting the table for writing and acquiring the file's name
        DefaultTableModel model = (DefaultTableModel) tablec1.getModel();
        BufferedReader br = null;
        fd = new JFileChooser();
        String nam = "";
        int returnVal = fd.showDialog(Jtable2.this,
                                      "Load");
        
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fd.getSelectedFile();
            nam = file.getPath();
        } 
        field.setText(nam);
        
        //Reading from file and writing to the table
        try {

                String sCurrentLine;
                System.out.println(nam);
                
                br = new BufferedReader(new FileReader(nam));
                fc = fd;
                int rowCount = model.getRowCount();
                for (int i = rowCount - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
                Object[] header2 = {"Dip direction", "Dip angle", "Stress Ratio", "<html>Trend of &sigma;1</html>", "<html>Plunge of &sigma;1</html>", "<html>Trend of &sigma;2</html>", "<html>Plunge of &sigma;2</html>", "<html>Trend of &sigma;3</html>", "<html>Plunge of &sigma;3</html>", "Rake of slip", "Sense", "Trend of slip","Plunge of slip", "Vector normal to the plane", "Vector of slip"};
                Object[] header = {"","","Input","","","","","", "", "|","" ,"", "Output", "", ""};
                model.addRow(header);
                model.addRow(header2);
                while ((sCurrentLine = br.readLine()) != null) {
                        String delims = "[;]+";
                        String[] tokens = sCurrentLine.split(delims);
                        model.addRow(tokens);        
                }

        } catch (IOException e) {
        } finally {
                try {
                        if (br != null)br.close();
                } catch (IOException ex) {
                }
        }
    }//GEN-LAST:event_LoadActionPerformed
     /*-----------------------------------
     Function addNewEntry
     Adds a new entry to the table
     Parameters: All the strings necessary to fill up the table
     ------------------------------------*/
   public void addNewEntry(String b, String d, String a,String regime,String ph, String ph2, String ph3, String de1, String de2, String de3, String d1, String sense, String phip, String d2, String d3, String vg) {                                     
       //Creating object with strings  
       Object[] row = { b, d, a, ph, de1, ph2,de2, ph3, de3,  d1, sense, phip, d2, d3, vg};
        DefaultTableModel model = (DefaultTableModel) tablec1.getModel();
        //If it is the first line, create the header
        if(model.getRowCount() == 0){
            Object[] header2 = {"Dip direction", "Dip angle", "Stress Ratio", "<html>Trend of &sigma;1</html>", "<html>Plunge of &sigma;1</html>", "<html>Trend of &sigma;2</html>", "<html>Plunge of &sigma;2</html>", "<html>Trend of &sigma;3</html>", "<html>Plunge of &sigma;3</html>", "Rake of slip", "Sense", "Trend of slip","Plunge of slip", "Vector normal to the plane", "Vector of slip"};
            Object[] header = {"","","Input","","","","","", "", "|","" ,"", "Output", "", ""};
            model.addRow(header);
            model.addRow(header2);
        }
        //Add row to the table
        model.addRow(row);
        tablec1.scrollRectToVisible(tablec1.getCellRect(tablec1.getRowCount()-1, 0, true));
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jtable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jtable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jtable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jtable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jtable2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Load;
    private javax.swing.JButton Save;
    private javax.swing.JTextField field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablec1;
    // End of variables declaration//GEN-END:variables
}
